const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

// Function to clear all auto-generated content patterns
async function clearAutoGeneratedContent() {
  console.log('üóëÔ∏è  Clearing all auto-generated content patterns...\n');
  
  let clearedSections = 0;
  
  // Define patterns that indicate auto-generated content
  const autoGeneratedPatterns = {
    aboutContent: [
      '%has established itself as a premier destination%',
      '%combines cutting-edge technology%',
      '%Founded with a vision to%',
      '%Security is paramount at%'
    ],
    gameContent: [
      '%offers an impressive selection of over 3,000 games%',
      '%Slot Games%Our slot collection features%',
      '%Table Games%Experience the thrill%',
      '%Crypto-Native Games%Unique blockchain-based%',
      '%Live Dealer Games%Immersive live casino%'
    ],
    termsContent: [
      '%These terms and conditions%',
      '%By accessing and using%',
      '%reserves the right to%'
    ],
    faqContent: [
      '%Are your games provably fair%',
      '%Do you offer customer support%',
      '%Can I play on mobile devices%'
    ],
    bonusDetailsContent: [
      '%This generous welcome bonus%',
      '%The bonus is subject to%',
      '%To qualify for this bonus%'
    ],
    howToRedeemContent: [
      '%Copy bonus code%Click on the%',
      '%Visit the site%Open the%',
      '%Follow steps to unlock reward%'
    ]
  };
  
  // Clear content matching auto-generated patterns
  for (const [field, patterns] of Object.entries(autoGeneratedPatterns)) {
    for (const pattern of patterns) {
      const result = await prisma.$executeRaw`
        UPDATE "Casino" 
        SET ${field} = NULL 
        WHERE ${field} LIKE ${pattern}
      `;
      
      if (result > 0) {
        console.log(`   ‚úÖ Cleared ${result} ${field} sections matching pattern`);
        clearedSections += result;
      }
    }
  }
  
  console.log(`\nüéØ Total auto-generated sections cleared: ${clearedSections}\n`);
}

// Function to clear remaining duplicate content
async function clearRemainingDuplicates() {
  console.log('üîç Finding and clearing remaining duplicate content...\n');
  
  const contentFields = [
    'aboutContent',
    'gameContent', 
    'termsContent',
    'faqContent',
    'bonusDetailsContent',
    'howToRedeemContent'
  ];
  
  let totalCleared = 0;
  
  for (const field of contentFields) {
    // Find casinos with identical content in this field
    const duplicateGroups = await prisma.$queryRaw`
      SELECT ${field} as content, array_agg(id) as casino_ids, array_agg(name) as casino_names
      FROM "Casino" 
      WHERE ${field} IS NOT NULL 
      AND LENGTH(${field}) > 50
      GROUP BY ${field}
      HAVING COUNT(*) > 1
      ORDER BY COUNT(*) DESC
    `;
    
    if (duplicateGroups.length > 0) {
      console.log(`üìã ${field}: Found ${duplicateGroups.length} duplicate groups`);
      
      for (const group of duplicateGroups) {
        const casinoIds = group.casino_ids;
        const casinoNames = group.casino_names;
        
        // Keep content in first casino, clear from others
        const [keepId, ...clearIds] = casinoIds;
        const [keepName, ...clearNames] = casinoNames;
        
        console.log(`   ‚úÖ Keeping in: ${keepName}`);
        console.log(`   üóëÔ∏è  Clearing from: ${clearNames.join(', ')}`);
        
        // Clear content from duplicate casinos
        if (clearIds.length > 0) {
          await prisma.casino.updateMany({
            where: { id: { in: clearIds } },
            data: { [field]: null }
          });
          totalCleared += clearIds.length;
        }
      }
      console.log('');
    } else {
      console.log(`‚úÖ ${field}: No duplicates found`);
    }
  }
  
  console.log(`üéØ Total duplicate sections cleared: ${totalCleared}\n`);
}

// Function to disable auto-generation in admin (by removing the functions)
async function reportAutoGenerationRemoval() {
  console.log('‚ö†Ô∏è  AUTO-GENERATION REMOVAL NEEDED:\n');
  console.log('The following files contain auto-generation functions that should be removed:');
  console.log('');
  console.log('1. src/app/admin/casinos/[casinoId]/page.tsx');
  console.log('   - Remove: generateAboutContent()');
  console.log('   - Remove: generateGameContent()');
  console.log('   - Remove: generateTermsContent()');
  console.log('   - Remove: generateFAQContent()');
  console.log('   - Remove: generateBonusDetailsContent()');
  console.log('   - Remove: generateHowToRedeemContent()');
  console.log('');
  console.log('2. scripts/regenerate-casino-content.js');
  console.log('   - This entire script should be DELETED or ARCHIVED');
  console.log('');
  console.log('3. scripts/seed-casino-content.js');
  console.log('   - This script should be DELETED or ARCHIVED');
  console.log('');
  console.log('After running this cleanup script, manually edit casino content via admin panel only.\n');
}

// Function to show content statistics
async function showContentStats() {
  console.log('üìä CONTENT STATISTICS AFTER CLEANUP:\n');
  
  const contentFields = [
    'aboutContent',
    'gameContent', 
    'termsContent',
    'faqContent',
    'bonusDetailsContent',
    'howToRedeemContent'
  ];
  
  const totalCasinos = await prisma.casino.count();
  console.log(`Total casinos: ${totalCasinos}\n`);
  
  for (const field of contentFields) {
    const withContent = await prisma.casino.count({
      where: { 
        [field]: { not: null },
        [field]: { not: '' }
      }
    });
    
    const withoutContent = totalCasinos - withContent;
    const percentage = Math.round((withContent / totalCasinos) * 100);
    
    console.log(`${field}:`);
    console.log(`   ‚úÖ With content: ${withContent} (${percentage}%)`);
    console.log(`   ‚ö™ Without content: ${withoutContent} (${100-percentage}%)`);
    console.log('');
  }
}

// Main function
async function main() {
  try {
    console.log('üöÄ REMOVING AUTO-GENERATION AND DUPLICATE CONTENT\n');
    console.log('='.repeat(60));
    console.log('');
    
    // Step 1: Clear all auto-generated content patterns
    await clearAutoGeneratedContent();
    
    // Step 2: Clear remaining duplicates
    await clearRemainingDuplicates();
    
    // Step 3: Show what needs to be removed from code
    await reportAutoGenerationRemoval();
    
    // Step 4: Show final statistics
    await showContentStats();
    
    console.log('‚úÖ CLEANUP COMPLETED SUCCESSFULLY!\n');
    console.log('Next steps:');
    console.log('1. Remove auto-generation functions from admin code');
    console.log('2. Delete/archive auto-generation scripts');  
    console.log('3. Add unique, casino-specific content via admin panel');
    console.log('4. Focus on what makes each casino different and special');
    
  } catch (error) {
    console.error('‚ùå Error during cleanup:', error);
  } finally {
    await prisma.$disconnect();
  }
}

// Run the script
main(); 