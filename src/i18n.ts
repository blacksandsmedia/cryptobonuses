import { getRequestConfig } from 'next-intl/server';
import { notFound } from 'next/navigation';

// Define supported locales
export const locales = ['en', 'pl', 'tr', 'es', 'pt', 'vi', 'ja', 'ko', 'fr'] as const;
export type Locale = typeof locales[number];

// Default locale (English) - no prefix
export const defaultLocale = 'en' as const;

// Locale configuration with names and RTL support
export const localeConfig = {
  en: { name: 'English', flag: 'ðŸ‡ºðŸ‡¸' },
  pl: { name: 'Polski', flag: 'ðŸ‡µðŸ‡±' },
  tr: { name: 'TÃ¼rkÃ§e', flag: 'ðŸ‡¹ðŸ‡·' },
  es: { name: 'EspaÃ±ol', flag: 'ðŸ‡ªðŸ‡¸' },
  pt: { name: 'PortuguÃªs', flag: 'ðŸ‡µðŸ‡¹' },
  vi: { name: 'Tiáº¿ng Viá»‡t', flag: 'ðŸ‡»ðŸ‡³' },
  ja: { name: 'æ—¥æœ¬èªž', flag: 'ðŸ‡¯ðŸ‡µ' },
  ko: { name: 'í•œêµ­ì–´', flag: 'ðŸ‡°ðŸ‡·' },
  fr: { name: 'FranÃ§ais', flag: 'ðŸ‡«ðŸ‡·' },
} as const;

export default getRequestConfig(async ({ locale }) => {
  // Validate that the incoming `locale` parameter is valid
  if (!locales.includes(locale as any)) {
    notFound();
  }

  return {
    messages: (await import(`../messages/${locale}.json`)).default,
    locale: locale as string
  };
}); 